INFO:SE:model inited
INFO:SE:training start
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1138)
           2	LOAD_FAST(arg=0, lineno=1138)
           4	LOAD_CONST(arg=1, lineno=1138)
           6	BINARY_SUBSCR(arg=None, lineno=1138)
           8	STORE_FAST(arg=3, lineno=1138)
          10	LOAD_FAST(arg=1, lineno=1139)
          12	UNARY_NEGATIVE(arg=None, lineno=1139)
          14	LOAD_FAST(arg=3, lineno=1139)
          16	DUP_TOP(arg=None, lineno=1139)
          18	ROT_THREE(arg=None, lineno=1139)
          20	COMPARE_OP(arg=1, lineno=1139)
          22	POP_JUMP_IF_FALSE(arg=32, lineno=1139)
          24	LOAD_FAST(arg=1, lineno=1139)
          26	COMPARE_OP(arg=1, lineno=1139)
          28	POP_JUMP_IF_FALSE(arg=40, lineno=1139)
          30	JUMP_FORWARD(arg=4, lineno=1139)
>         32	POP_TOP(arg=None, lineno=1139)
          34	JUMP_FORWARD(arg=4, lineno=1139)
>         36	LOAD_CONST(arg=1, lineno=1140)
          38	STORE_FAST(arg=3, lineno=1140)
>         40	LOAD_FAST(arg=0, lineno=1142)
          42	LOAD_CONST(arg=2, lineno=1142)
          44	BINARY_SUBSCR(arg=None, lineno=1142)
          46	STORE_FAST(arg=4, lineno=1142)
          48	LOAD_FAST(arg=1, lineno=1143)
          50	UNARY_NEGATIVE(arg=None, lineno=1143)
          52	LOAD_FAST(arg=4, lineno=1143)
          54	DUP_TOP(arg=None, lineno=1143)
          56	ROT_THREE(arg=None, lineno=1143)
          58	COMPARE_OP(arg=1, lineno=1143)
          60	POP_JUMP_IF_FALSE(arg=70, lineno=1143)
          62	LOAD_FAST(arg=1, lineno=1143)
          64	COMPARE_OP(arg=1, lineno=1143)
          66	POP_JUMP_IF_FALSE(arg=78, lineno=1143)
          68	JUMP_FORWARD(arg=4, lineno=1143)
>         70	POP_TOP(arg=None, lineno=1143)
          72	JUMP_FORWARD(arg=4, lineno=1143)
>         74	LOAD_CONST(arg=1, lineno=1144)
          76	STORE_FAST(arg=4, lineno=1144)
>         78	LOAD_FAST(arg=2, lineno=1146)
          80	POP_JUMP_IF_FALSE(arg=102, lineno=1146)
          82	LOAD_GLOBAL(arg=0, lineno=1147)
          84	LOAD_METHOD(arg=1, lineno=1147)
          86	LOAD_FAST(arg=3, lineno=1147)
          88	CALL_METHOD(arg=1, lineno=1147)
          90	LOAD_GLOBAL(arg=0, lineno=1147)
          92	LOAD_METHOD(arg=1, lineno=1147)
          94	LOAD_FAST(arg=4, lineno=1147)
          96	CALL_METHOD(arg=1, lineno=1147)
          98	COMPARE_OP(arg=3, lineno=1147)
         100	RETURN_VALUE(arg=None, lineno=1147)
>        102	LOAD_GLOBAL(arg=0, lineno=1149)
         104	LOAD_METHOD(arg=2, lineno=1149)
         106	LOAD_FAST(arg=3, lineno=1149)
         108	CALL_METHOD(arg=1, lineno=1149)
         110	LOAD_GLOBAL(arg=0, lineno=1149)
         112	LOAD_METHOD(arg=2, lineno=1149)
         114	LOAD_FAST(arg=4, lineno=1149)
         116	CALL_METHOD(arg=1, lineno=1149)
         118	COMPARE_OP(arg=3, lineno=1149)
         120	RETURN_VALUE(arg=None, lineno=1149)
         122	LOAD_CONST(arg=3, lineno=1149)
         124	RETURN_VALUE(arg=None, lineno=1149)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1138)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1138)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1138)
DEBUG:numba.core.byteflow:stack ['$x2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1138)
DEBUG:numba.core.byteflow:stack ['$x2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1138)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1139)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$threshold10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$12unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$12unary_negative.4', '$x014.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=32, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$16dup_top.6', '$20compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$phi24.0', '$threshold24.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$26compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=POP_TOP(arg=None, lineno=1139)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=JUMP_FORWARD(arg=4, lineno=1139)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=JUMP_FORWARD(arg=4, lineno=1139)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1142)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1142)
DEBUG:numba.core.byteflow:stack ['$x40.0']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1142)
DEBUG:numba.core.byteflow:stack ['$x40.0', '$const42.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1142)
DEBUG:numba.core.byteflow:stack ['$44binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1143)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$threshold48.3']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$50unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$50unary_negative.4', '$x152.5']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=70, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$54dup_top.6', '$58compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1140)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1140)
DEBUG:numba.core.byteflow:stack ['$const36.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi62.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$phi62.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$threshold62.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=78, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$64compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi70.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=POP_TOP(arg=None, lineno=1143)
DEBUG:numba.core.byteflow:stack ['$phi70.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=JUMP_FORWARD(arg=4, lineno=1143)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=JUMP_FORWARD(arg=4, lineno=1143)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1146)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=102, lineno=1146)
DEBUG:numba.core.byteflow:stack ['$zero_pos78.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1144)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1144)
DEBUG:numba.core.byteflow:stack ['$const74.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1147)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$82load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$84load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$84load_method.1', '$x086.2']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$88call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$88call_method.3', '$90load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$88call_method.3', '$92load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$88call_method.3', '$92load_method.5', '$x194.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$88call_method.3', '$96call_method.7']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1147)
DEBUG:numba.core.byteflow:stack ['$98compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1149)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$102load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$104load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$104load_method.1', '$x0106.2']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$108call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$108call_method.3', '$110load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$108call_method.3', '$112load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$108call_method.3', '$116call_method.7']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$118compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1139),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1139),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1143),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1143),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1138),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/home/ma-user/anaconda3/envs/MindSpore/lib/python3.7/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1138)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/home/ma-user/anaconda3/envs/MindSpore/lib/python3.7/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1142)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/home/ma-user/anaconda3/envs/MindSpore/lib/python3.7/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1138)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/home/ma-user/anaconda3/envs/MindSpore/lib/python3.7/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1142)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1042)
           2	LOAD_FAST(arg=0, lineno=1042)
           4	LOAD_CONST(arg=1, lineno=1042)
           6	BINARY_SUBSCR(arg=None, lineno=1042)
           8	LOAD_FAST(arg=0, lineno=1042)
          10	LOAD_CONST(arg=2, lineno=1042)
          12	BINARY_SUBSCR(arg=None, lineno=1042)
          14	COMPARE_OP(arg=4, lineno=1042)
          16	LOAD_FAST(arg=0, lineno=1042)
          18	LOAD_CONST(arg=1, lineno=1042)
          20	BINARY_SUBSCR(arg=None, lineno=1042)
          22	LOAD_FAST(arg=0, lineno=1042)
          24	LOAD_CONST(arg=3, lineno=1042)
          26	BINARY_SUBSCR(arg=None, lineno=1042)
          28	COMPARE_OP(arg=5, lineno=1042)
          30	BINARY_AND(arg=None, lineno=1042)
          32	RETURN_VALUE(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$x2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$x2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2', '$x8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2', '$12binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$x16.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$x16.7', '$const18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$28compare_op.13']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1042)
DEBUG:numba.core.byteflow:stack ['$30binary_and.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1048)
           2	LOAD_FAST(arg=0, lineno=1048)
           4	LOAD_CONST(arg=1, lineno=1048)
           6	BINARY_SUBSCR(arg=None, lineno=1048)
           8	LOAD_FAST(arg=0, lineno=1048)
          10	LOAD_CONST(arg=2, lineno=1048)
          12	BINARY_SUBSCR(arg=None, lineno=1048)
          14	COMPARE_OP(arg=0, lineno=1048)
          16	LOAD_FAST(arg=0, lineno=1048)
          18	LOAD_CONST(arg=1, lineno=1048)
          20	BINARY_SUBSCR(arg=None, lineno=1048)
          22	LOAD_FAST(arg=0, lineno=1048)
          24	LOAD_CONST(arg=3, lineno=1048)
          26	BINARY_SUBSCR(arg=None, lineno=1048)
          28	COMPARE_OP(arg=1, lineno=1048)
          30	BINARY_AND(arg=None, lineno=1048)
          32	RETURN_VALUE(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$x2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$x2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2', '$x8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2', '$12binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$x16.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$x16.7', '$const18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$14compare_op.6', '$28compare_op.13']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1048)
DEBUG:numba.core.byteflow:stack ['$30binary_and.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']


TotalTime = 642.672, [19]
[parse]: 1.21158
[symbol_resolve]: 0.924143, [1]
    [Cycle 1]: 0.920497, [1]
        [resolve]: 0.920452
[combine_like_graphs]: 0.00269144
[graph_reusing]: 3.98979e-06
[meta_unpack_prepare]: 0.00492595
[abstract_specialize]: 1.87996
[pack_expand]: 0.00150222
[auto_monad]: 0.00918054
[inline]: 2.46987e-06
[pre_auto_parallel]: 2.262e-05
[pipeline_split]: 3.18e-06
[optimize]: 1.79901, [29]
    [py_interpret_to_execute]: 0.00123081
    [rewriter_before_opt_a]: 0.0124103
    [opt_a]: 1.46019, [3]
        [Cycle 1]: 1.34306, [28]
            [expand_dump_flag]: 0.000169371
            [switch_simplify]: 0.00396541
            [a_1]: 0.0842525
            [recompute_prepare]: 0.000574823
            [updatestate_depend_eliminate]: 0.00381521
            [updatestate_assign_eliminate]: 0.000803554
            [updatestate_loads_eliminate]: 0.00269785
            [parameter_eliminate]: 1.81212e-05
            [a_2]: 0.00941737
            [accelerated_algorithm]: 0.000268151
            [pynative_shard]: 2.04006e-06
            [auto_parallel]: 5.56e-06
            [parallel]: 2.405e-05
            [allreduce_fusion]: 0.000216021
            [virtual_dataset]: 0.000242721
            [get_grad_eliminate_]: 0.000207901
            [virtual_output]: 0.000203261
            [cell_reuse_recompute_pass]: 9.00123e-07
            [cell_reuse_handle_not_recompute_node_pass]: 0.000526403
            [meta_fg_expand]: 0.0620022
            [after_resolve]: 0.00129441
            [a_after_grad]: 0.00203773
            [renormalize]: 1.12889
            [real_op_eliminate]: 0.00255534
            [auto_monad_grad]: 0.00134275
            [auto_monad_eliminator]: 0.00334467
            [cse]: 0.00935193
            [a_3]: 0.0243965
        [Cycle 2]: 0.100403, [28]
            [expand_dump_flag]: 7.12899e-05
            [switch_simplify]: 0.00132704
            [a_1]: 0.0364054
            [recompute_prepare]: 0.000280001
            [updatestate_depend_eliminate]: 0.000847365
            [updatestate_assign_eliminate]: 0.000354591
            [updatestate_loads_eliminate]: 0.000495332
            [parameter_eliminate]: 3.75975e-06
            [a_2]: 0.00429365
            [accelerated_algorithm]: 0.000278391
            [pynative_shard]: 2.11038e-06
            [auto_parallel]: 6.57002e-06
            [parallel]: 8.80985e-06
            [allreduce_fusion]: 0.000163631
            [virtual_dataset]: 0.000242381
            [get_grad_eliminate_]: 0.000216681
            [virtual_output]: 0.000213481
            [cell_reuse_recompute_pass]: 7.70204e-07
            [cell_reuse_handle_not_recompute_node_pass]: 0.000476432
            [meta_fg_expand]: 0.000475672
            [after_resolve]: 0.000302931
            [a_after_grad]: 0.000266171
            [renormalize]: 0.0472541
            [real_op_eliminate]: 0.000327101
            [auto_monad_grad]: 7.2103e-06
            [auto_monad_eliminator]: 0.00110401
            [cse]: 0.0028233
            [a_3]: 0.00183444
        [Cycle 3]: 0.0156247, [28]
            [expand_dump_flag]: 2.33017e-06
            [switch_simplify]: 0.000218261
            [a_1]: 0.00314918
            [recompute_prepare]: 0.000216451
            [updatestate_depend_eliminate]: 0.000526593
            [updatestate_assign_eliminate]: 0.000316971
            [updatestate_loads_eliminate]: 0.000315052
            [parameter_eliminate]: 2.69013e-06
            [a_2]: 0.0042973
            [accelerated_algorithm]: 0.000280062
            [pynative_shard]: 2.04984e-06
            [auto_parallel]: 5.94975e-06
            [parallel]: 7.05989e-06
            [allreduce_fusion]: 0.000106611
            [virtual_dataset]: 0.000220041
            [get_grad_eliminate_]: 0.000225971
            [virtual_output]: 0.000212541
            [cell_reuse_recompute_pass]: 6.99889e-07
            [cell_reuse_handle_not_recompute_node_pass]: 0.000462412
            [meta_fg_expand]: 0.000344242
            [after_resolve]: 0.000273702
            [a_after_grad]: 0.000257841
            [renormalize]: 1.70432e-07
            [real_op_eliminate]: 0.000211141
            [auto_monad_grad]: 3.34997e-06
            [auto_monad_eliminator]: 0.000612593
            [cse]: 0.00128072
            [a_3]: 0.00181866
    [slice_cell_reuse_recomputed_activation]: 3.7197e-06
    [rewriter_after_opt_a]: 0.0140302
    [order_py_execute_after_rewriter]: 0.000361272
    [opt_b]: 0.297912, [2]
        [Cycle 1]: 0.274218, [7]
            [b_1]: 0.197706
            [b_2]: 0.000257281
            [updatestate_depend_eliminate]: 0.000395972
            [updatestate_assign_eliminate]: 0.000307902
            [updatestate_loads_eliminate]: 0.000303021
            [renormalize]: 6.99889e-07
            [cse]: 0.0750714
        [Cycle 2]: 0.0236748, [7]
            [b_1]: 0.00614978
            [b_2]: 0.000223671
            [updatestate_depend_eliminate]: 0.000407582
            [updatestate_assign_eliminate]: 0.000302802
            [updatestate_loads_eliminate]: 0.000299931
            [renormalize]: 1.09896e-07
            [cse]: 0.0161944
    [cconv]: 0.000250151
    [opt_after_cconv]: 0.00293205, [1]
        [Cycle 1]: 0.00292163, [7]
            [c_1]: 0.000636973
            [parameter_eliminate]: 5.96e-06
            [updatestate_depend_eliminate]: 0.000369682
            [updatestate_assign_eliminate]: 0.000313872
            [updatestate_loads_eliminate]: 0.000330101
            [cse]: 0.00118709
            [renormalize]: 7.30157e-07
    [remove_dup_value]: 0.00295299
    [tuple_transform]: 0.00143859, [1]
        [Cycle 1]: 0.00143084, [2]
            [d_1]: 0.00140855
            [renormalize]: 5.69969e-07
    [add_cache_embedding]: 0.00150395
    [add_recomputation]: 0.00220479
    [cse_after_recomputation]: 0.000875245, [1]
        [Cycle 1]: 0.000867265, [1]
            [cse]: 0.000850485
    [environ_conv]: 0.000405662
    [label_micro_interleaved_index]: 4.707e-05
    [slice_recompute_activation]: 1.34995e-06
    [micro_interleaved_order_control]: 1.30013e-06
    [reorder_send_recv_between_fp_bp]: 2.02982e-06
    [comm_op_add_attrs]: 2.84007e-06
    [add_comm_op_reuse_tag]: 9.30391e-07
    [overlap_opt_shard_in_pipeline]: 1.01002e-06
    [grouped_pairwise_exchange_alltoall]: 1.36998e-06
    [overlap_recompute_and_grad_model_parallel]: 1.93994e-06
    [split_matmul_comm_elemetwise]: 2.09967e-06
    [split_layernorm_comm]: 1.93994e-06
    [overlap_grad_matmul_and_grad_allreduce]: 7.39936e-07
    [process_send_recv_for_ge]: 1.77901e-05
    [handle_group_info]: 5.8068e-07
[auto_monad_reorder]: 0.00123951
[eliminate_forward_cnode]: 5.99772e-07
[eliminate_special_op_node]: 0.00286699
[validate]: 0.00101769
[distribtued_split]: 1.57701e-05
[task_emit]: 636.832
[execute]: 1.15098e-05
Sums
    parse                                :     1.211578s :  0.19%
    symbol_resolve.resolve               :     0.920452s :  0.14%
    combine_like_graphs                  :     0.002691s :  0.00%
    graph_reusing                        :     0.000004s :  0.00%
    meta_unpack_prepare                  :     0.004926s :  0.00%
    abstract_specialize                  :     1.879956s :  0.29%
    pack_expand                          :     0.001502s :  0.00%
    auto_monad                           :     0.009181s :  0.00%
    inline                               :     0.000002s :  0.00%
    pre_auto_parallel                    :     0.000023s :  0.00%
    pipeline_split                       :     0.000003s :  0.00%
    optimize.py_interpret_to_execute     :     0.001231s :  0.00%
    optimize.rewriter_before_opt_a       :     0.012410s :  0.00%
    optimize.opt_a.expand_dump_flag      :     0.000243s :  0.00%
    optimize.opt_a.switch_simplify       :     0.005511s :  0.00%
    optimize.opt_a.a_1                   :     0.123807s :  0.02%
    optimize.opt_a.recompute_prepare     :     0.001071s :  0.00%
    optimize.opt_a.updatestate_depend_eliminate :     0.005189s :  0.00%
    optimize.opt_a.updatestate_assign_eliminate :     0.001475s :  0.00%
    optimize.opt_a.updatestate_loads_eliminate :     0.003508s :  0.00%
    optimize.opt_a.parameter_eliminate   :     0.000025s :  0.00%
    optimize.opt_a.a_2                   :     0.018008s :  0.00%
    optimize.opt_a.accelerated_algorithm :     0.000827s :  0.00%
    optimize.opt_a.pynative_shard        :     0.000006s :  0.00%
    optimize.opt_a.auto_parallel         :     0.000018s :  0.00%
    optimize.opt_a.parallel              :     0.000040s :  0.00%
    optimize.opt_a.allreduce_fusion      :     0.000486s :  0.00%
    optimize.opt_a.virtual_dataset       :     0.000705s :  0.00%
    optimize.opt_a.get_grad_eliminate_   :     0.000651s :  0.00%
    optimize.opt_a.virtual_output        :     0.000629s :  0.00%
    optimize.opt_a.cell_reuse_recompute_pass :     0.000002s :  0.00%
    optimize.opt_a.cell_reuse_handle_not_recompute_node_pass :     0.001465s :  0.00%
    optimize.opt_a.meta_fg_expand        :     0.062822s :  0.01%
    optimize.opt_a.after_resolve         :     0.001871s :  0.00%
    optimize.opt_a.a_after_grad          :     0.002562s :  0.00%
    optimize.opt_a.renormalize           :     1.176146s :  0.18%
    optimize.opt_a.real_op_eliminate     :     0.003094s :  0.00%
    optimize.opt_a.auto_monad_grad       :     0.001353s :  0.00%
    optimize.opt_a.auto_monad_eliminator :     0.005061s :  0.00%
    optimize.opt_a.cse                   :     0.013456s :  0.00%
    optimize.opt_a.a_3                   :     0.028050s :  0.00%
    optimize.slice_cell_reuse_recomputed_activation :     0.000004s :  0.00%
    optimize.rewriter_after_opt_a        :     0.014030s :  0.00%
    optimize.order_py_execute_after_rewriter :     0.000361s :  0.00%
    optimize.opt_b.b_1                   :     0.203855s :  0.03%
    optimize.opt_b.b_2                   :     0.000481s :  0.00%
    optimize.opt_b.updatestate_depend_eliminate :     0.000804s :  0.00%
    optimize.opt_b.updatestate_assign_eliminate :     0.000611s :  0.00%
    optimize.opt_b.updatestate_loads_eliminate :     0.000603s :  0.00%
    optimize.opt_b.renormalize           :     0.000001s :  0.00%
    optimize.opt_b.cse                   :     0.091266s :  0.01%
    optimize.cconv                       :     0.000250s :  0.00%
    optimize.opt_after_cconv.c_1         :     0.000637s :  0.00%
    optimize.opt_after_cconv.parameter_eliminate :     0.000006s :  0.00%
    optimize.opt_after_cconv.updatestate_depend_eliminate :     0.000370s :  0.00%
    optimize.opt_after_cconv.updatestate_assign_eliminate :     0.000314s :  0.00%
    optimize.opt_after_cconv.updatestate_loads_eliminate :     0.000330s :  0.00%
    optimize.opt_after_cconv.cse         :     0.001187s :  0.00%
    optimize.opt_after_cconv.renormalize :     0.000001s :  0.00%
    optimize.remove_dup_value            :     0.002953s :  0.00%
    optimize.tuple_transform.d_1         :     0.001409s :  0.00%
    optimize.tuple_transform.renormalize :     0.000001s :  0.00%
    optimize.add_cache_embedding         :     0.001504s :  0.00%
    optimize.add_recomputation           :     0.002205s :  0.00%
    optimize.cse_after_recomputation.cse :     0.000850s :  0.00%
    optimize.environ_conv                :     0.000406s :  0.00%
    optimize.label_micro_interleaved_index :     0.000047s :  0.00%
    optimize.slice_recompute_activation  :     0.000001s :  0.00%
    optimize.micro_interleaved_order_control :     0.000001s :  0.00%
    optimize.reorder_send_recv_between_fp_bp :     0.000002s :  0.00%
    optimize.comm_op_add_attrs           :     0.000003s :  0.00%
    optimize.add_comm_op_reuse_tag       :     0.000001s :  0.00%
    optimize.overlap_opt_shard_in_pipeline :     0.000001s :  0.00%
    optimize.grouped_pairwise_exchange_alltoall :     0.000001s :  0.00%
    optimize.overlap_recompute_and_grad_model_parallel :     0.000002s :  0.00%
    optimize.split_matmul_comm_elemetwise :     0.000002s :  0.00%
    optimize.split_layernorm_comm        :     0.000002s :  0.00%
    optimize.overlap_grad_matmul_and_grad_allreduce :     0.000001s :  0.00%
    optimize.process_send_recv_for_ge    :     0.000018s :  0.00%
    optimize.handle_group_info           :     0.000001s :  0.00%
    auto_monad_reorder                   :     0.001240s :  0.00%
    eliminate_forward_cnode              :     0.000001s :  0.00%
    eliminate_special_op_node            :     0.002867s :  0.00%
    validate                             :     0.001018s :  0.00%
    distribtued_split                    :     0.000016s :  0.00%
    task_emit                            :   636.832164s : 99.09%
    execute                              :     0.000012s :  0.00%


Time group info:
------[substitution.]   1.147026 19394
 0.01% :     0.000106s :     78: substitution.addn_check_dump
 0.02% :     0.000205s :     60: substitution.addn_zero_filter
 0.01% :     0.000080s :     60: substitution.adjust_all_reduce_mul_add
 0.07% :     0.000833s :    254: substitution.arithmetic_simplify
 0.02% :     0.000207s :     48: substitution.cast_eliminate
 0.01% :     0.000090s :    158: substitution.depend_value_elim
 0.00% :     0.000041s :     51: substitution.environ_get_add_eliminate
 0.00% :     0.000018s :     26: substitution.environ_get_depend_swap
 0.01% :     0.000060s :    101: substitution.environ_get_eliminate
 0.02% :     0.000239s :     51: substitution.environ_get_set_eliminate
 0.01% :     0.000105s :    294: substitution.float_depend_g_call
 0.00% :     0.000019s :     50: substitution.float_environ_get_switch
 0.01% :     0.000125s :    268: substitution.float_tuple_getitem_switch
 0.00% :     0.000009s :      8: substitution.get_constexpr_ops
 0.02% :     0.000198s :      4: substitution.get_meta_fg
77.76% :     0.891981s :   1395: substitution.getattr_setattr_resolve
 0.01% :     0.000172s :    433: substitution.graph_param_transform
 0.00% :     0.000014s :     54: substitution.incorporate_call
 0.00% :     0.000012s :     54: substitution.incorporate_call_switch
 4.75% :     0.054524s :   1151: substitution.inline
 0.00% :     0.000030s :    101: substitution.less_batch_normalization
 0.01% :     0.000143s :    772: substitution.load_eliminater
 0.01% :     0.000132s :     78: substitution.merge_addn
 0.15% :     0.001700s :   2422: substitution.meta_unpack_prepare
 0.02% :     0.000280s :    386: substitution.minmaximum_grad
 0.03% :     0.000338s :    294: substitution.partial_eliminate
 0.01% :     0.000131s :     93: substitution.real_op_eliminate
 0.01% :     0.000059s :      6: substitution.reduce_eliminate
 0.01% :     0.000098s :   1114: substitution.remove_not_recompute_node
 0.11% :     0.001212s :    813: substitution.replace_applicator
 0.01% :     0.000101s :    479: substitution.replace_old_param
 0.02% :     0.000218s :     54: substitution.reshape_eliminate
 0.00% :     0.000008s :     22: substitution.resolve_primitive_attr_
 0.00% :     0.000007s :     12: substitution.set_cell_output_no_recompute
 0.00% :     0.000007s :      2: substitution.specialize_transform
 0.01% :     0.000073s :    100: substitution.split_environ_get_set_with_tuple_value
 0.01% :     0.000101s :    146: substitution.switch_simplify
 0.00% :     0.000008s :      2: substitution.tile_eliminate
 0.01% :     0.000147s :     60: substitution.transpose_eliminate
 0.11% :     0.001273s :    588: substitution.tuple_list_convert_item_index_to_positive
 0.06% :     0.000670s :    779: substitution.tuple_list_get_item_const_eliminator
 0.12% :     0.001366s :    772: substitution.tuple_list_get_item_depend_reorder
 0.21% :     0.002392s :   1523: substitution.tuple_list_get_item_eliminator
 0.08% :     0.000911s :    779: substitution.tuple_list_get_set_item_eliminator
 0.00% :     0.000011s :      2: substitution.tuple_list_set_item_eliminator
 0.06% :     0.000697s :   1636: substitution.updatestate_pure_node_eliminater
 0.08% :     0.000861s :   1759: substitution.updatestate_useless_node_eliminater
16.13% :     0.185013s :      2: substitution.zero_like_fill_zero
------[renormalize.]   1.176052     4
91.22% :     1.072817s :      2: renormalize.infer
 8.78% :     0.103235s :      2: renormalize.specialize
------[replace.]   0.040887  3446
 0.15% :     0.000060s :     11: replace.arithmetic_simplify
 0.23% :     0.000092s :     14: replace.cast_eliminate
 0.71% :     0.000289s :     47: replace.depend_value_elim
 0.67% :     0.000275s :     25: replace.environ_get_set_eliminate
 0.10% :     0.000043s :      4: replace.get_meta_fg
36.29% :     0.014837s :   1092: replace.getattr_setattr_resolve
32.64% :     0.013347s :   1054: replace.inline
 0.11% :     0.000046s :      1: replace.meta_unpack_prepare
 3.45% :     0.001411s :     75: replace.partial_eliminate
 1.18% :     0.000482s :     93: replace.real_op_eliminate
 1.74% :     0.000711s :     62: replace.replace_applicator
 3.48% :     0.001422s :    146: replace.switch_simplify
 3.46% :     0.001414s :    186: replace.tuple_list_get_item_depend_reorder
14.78% :     0.006041s :    626: replace.tuple_list_get_item_eliminator
 0.40% :     0.000163s :      7: replace.tuple_list_get_set_item_eliminator
 0.28% :     0.000114s :      1: replace.updatestate_useless_node_eliminater
 0.35% :     0.000142s :      2: replace.zero_like_fill_zero
------[match.]   1.131810  3446
 0.00% :     0.000037s :     11: match.arithmetic_simplify
 0.01% :     0.000078s :     14: match.cast_eliminate
 0.00% :     0.000018s :     47: match.depend_value_elim
 0.02% :     0.000218s :     25: match.environ_get_set_eliminate
 0.02% :     0.000198s :      4: match.get_meta_fg
78.63% :     0.889959s :   1092: match.getattr_setattr_resolve
 4.76% :     0.053827s :   1054: match.inline
 0.00% :     0.000045s :      1: match.meta_unpack_prepare
 0.02% :     0.000244s :     75: match.partial_eliminate
 0.01% :     0.000131s :     93: match.real_op_eliminate
 0.02% :     0.000179s :     62: match.replace_applicator
 0.01% :     0.000101s :    146: match.switch_simplify
 0.06% :     0.000674s :    186: match.tuple_list_get_item_depend_reorder
 0.09% :     0.001064s :    626: match.tuple_list_get_item_eliminator
 0.00% :     0.000017s :      7: match.tuple_list_get_set_item_eliminator
 0.00% :     0.000006s :      1: match.updatestate_useless_node_eliminater
16.35% :     0.185013s :      2: match.zero_like_fill_zero
------[func_graph_cloner_run.]   0.216581  2235
75.34% :     0.163182s :   1142: func_graph_cloner_run.FuncGraphClonerGraph
 6.51% :     0.014092s :    176: func_graph_cloner_run.FuncGraphClonerNode
18.15% :     0.039306s :    917: func_graph_cloner_run.FuncGraphSpecializer
------[meta_graph.]   0.000000     0
------[manager.]   0.000000     0
------[pynative]   0.000000     0
------[others.]   1.320673   248
 0.03% :     0.000429s :     36: opt.transform.bprop_mindir_opt
 3.59% :     0.047380s :    103: opt.transform.opt_a
15.43% :     0.203754s :     69: opt.transform.opt_b
69.69% :     0.920413s :      2: opt.transform.opt_resolve
 0.37% :     0.004865s :      1: opt.transforms.meta_unpack_prepare
10.65% :     0.140644s :     30: opt.transforms.opt_a
 0.05% :     0.000632s :      1: opt.transforms.opt_after_cconv
 0.04% :     0.000473s :      2: opt.transforms.opt_b
 0.11% :     0.001405s :      1: opt.transforms.opt_trans_graph
 0.05% :     0.000678s :      3: opt.transforms.special_op_eliminate

INFO:SE:[Train]Epoch:0; Step:0; Time:679.04; Loss:0.056728285; BS:80
INFO:SE:[Train]Epoch:2; Step:10; Time:20.15; Loss:0.046663266; BS:80
INFO:SE:[Train]Epoch:5; Step:20; Time:19.88; Loss:0.041771747; BS:80
INFO:SE:[Train]Epoch:7; Step:30; Time:17.50; Loss:0.04006312; BS:80
INFO:SE:[Train]Epoch:10; Step:40; Time:17.47; Loss:0.038513325; BS:80
INFO:SE:[Train]Epoch:12; Step:50; Time:17.47; Loss:0.038350586; BS:80
INFO:SE:[Train]Epoch:15; Step:60; Time:17.48; Loss:0.037384063; BS:80
INFO:SE:[Train]Epoch:17; Step:70; Time:17.47; Loss:0.036490496; BS:80
INFO:SE:[Train]Epoch:20; Step:80; Time:17.48; Loss:0.036394905; BS:80
INFO:SE:[Train]Epoch:22; Step:90; Time:17.49; Loss:0.035115097; BS:80
INFO:SE:[Train]Epoch:25; Step:100; Time:17.49; Loss:0.033701137; BS:80
INFO:SE:[Train]Epoch:27; Step:110; Time:17.50; Loss:0.03297407; BS:80
INFO:SE:[Train]Epoch:30; Step:120; Time:17.46; Loss:0.03249731; BS:80
INFO:SE:[Train]Epoch:32; Step:130; Time:17.46; Loss:0.03161109; BS:80
INFO:SE:[Train]Epoch:35; Step:140; Time:17.48; Loss:0.030512044; BS:80
INFO:SE:[Train]Epoch:37; Step:150; Time:17.52; Loss:0.030114379; BS:80
INFO:SE:[Train]Epoch:40; Step:160; Time:17.45; Loss:0.028717184; BS:80
INFO:SE:[Train]Epoch:42; Step:170; Time:17.46; Loss:0.028596977; BS:80
INFO:SE:[Train]Epoch:45; Step:180; Time:17.48; Loss:0.027254026; BS:80
INFO:SE:[Train]Epoch:47; Step:190; Time:17.48; Loss:0.02553916; BS:80
INFO:SE:[Train]Epoch:50; Step:200; Time:17.50; Loss:0.026285943; BS:80
INFO:SE:[Train]Epoch:52; Step:210; Time:17.47; Loss:0.026369546; BS:80
INFO:SE:[Train]Epoch:55; Step:220; Time:17.49; Loss:0.025014922; BS:80
INFO:SE:[Train]Epoch:57; Step:230; Time:17.49; Loss:0.02489451; BS:80
INFO:SE:[Train]Epoch:60; Step:240; Time:17.50; Loss:0.023985635; BS:80
INFO:SE:[Train]Epoch:62; Step:250; Time:17.47; Loss:0.022982303; BS:80
INFO:SE:[Train]Epoch:65; Step:260; Time:17.45; Loss:0.023217626; BS:80
INFO:SE:[Train]Epoch:67; Step:270; Time:17.48; Loss:0.023873381; BS:80
INFO:SE:[Train]Epoch:70; Step:280; Time:17.47; Loss:0.024132159; BS:80
INFO:SE:[Train]Epoch:72; Step:290; Time:17.50; Loss:0.022932172; BS:80
INFO:SE:[Train]Epoch:75; Step:300; Time:17.46; Loss:0.021755464; BS:80
INFO:SE:[Train]Epoch:77; Step:310; Time:17.50; Loss:0.021716187; BS:80
INFO:SE:[Train]Epoch:80; Step:320; Time:17.55; Loss:0.021762144; BS:80
INFO:SE:[Train]Epoch:82; Step:330; Time:17.49; Loss:0.0211653; BS:80
INFO:SE:[Train]Epoch:85; Step:340; Time:17.46; Loss:0.020921666; BS:80
INFO:SE:[Train]Epoch:87; Step:350; Time:17.54; Loss:0.020899368; BS:80
INFO:SE:[Train]Epoch:90; Step:360; Time:17.48; Loss:0.02045805; BS:80
INFO:SE:[Train]Epoch:92; Step:370; Time:17.48; Loss:0.020660931; BS:80
INFO:SE:[Train]Epoch:95; Step:380; Time:17.48; Loss:0.020251272; BS:80
INFO:SE:[Train]Epoch:97; Step:390; Time:17.46; Loss:0.019005349; BS:80
INFO:SE:[Train]Epoch:100; Step:400; Time:17.52; Loss:0.019471124; BS:80
INFO:SE:[Train]Epoch:102; Step:410; Time:17.45; Loss:0.019084204; BS:80
INFO:SE:[Train]Epoch:105; Step:420; Time:17.50; Loss:0.018769199; BS:80
INFO:SE:[Train]Epoch:107; Step:430; Time:17.54; Loss:0.019555945; BS:80
INFO:SE:[Train]Epoch:110; Step:440; Time:17.56; Loss:0.018450107; BS:80
INFO:SE:[Train]Epoch:112; Step:450; Time:17.46; Loss:0.01845053; BS:80
INFO:SE:[Train]Epoch:115; Step:460; Time:17.55; Loss:0.01803921; BS:80
INFO:SE:[Train]Epoch:117; Step:470; Time:17.48; Loss:0.018286321; BS:80
INFO:SE:[Train]Epoch:120; Step:480; Time:17.46; Loss:0.017792355; BS:80
INFO:SE:[Train]Epoch:122; Step:490; Time:17.52; Loss:0.01914618; BS:80
INFO:SE:[Train]Epoch:125; Step:500; Time:17.49; Loss:0.020484017; BS:80
INFO:SE:[Train]Epoch:127; Step:510; Time:17.50; Loss:0.019036863; BS:80
INFO:SE:[Train]Epoch:130; Step:520; Time:17.46; Loss:0.017752035; BS:80
INFO:SE:[Train]Epoch:132; Step:530; Time:17.52; Loss:0.017527124; BS:80
INFO:SE:[Train]Epoch:135; Step:540; Time:17.59; Loss:0.016885847; BS:80
INFO:SE:[Train]Epoch:137; Step:550; Time:17.53; Loss:0.016781557; BS:80
INFO:SE:[Train]Epoch:140; Step:560; Time:17.51; Loss:0.01636132; BS:80
INFO:SE:[Train]Epoch:142; Step:570; Time:17.49; Loss:0.01644091; BS:80
INFO:SE:[Train]Epoch:145; Step:580; Time:17.52; Loss:0.016260538; BS:80
INFO:SE:[Train]Epoch:147; Step:590; Time:17.49; Loss:0.01714765; BS:80
INFO:SE:[Train]Epoch:150; Step:600; Time:17.47; Loss:0.016175222; BS:80
INFO:SE:[Train]Epoch:152; Step:610; Time:17.48; Loss:0.01602624; BS:80
INFO:SE:[Train]Epoch:155; Step:620; Time:17.50; Loss:0.016074989; BS:80
INFO:SE:[Train]Epoch:157; Step:630; Time:17.57; Loss:0.01579426; BS:80
INFO:SE:[Train]Epoch:160; Step:640; Time:17.49; Loss:0.01539959; BS:80
INFO:SE:[Train]Epoch:162; Step:650; Time:17.49; Loss:0.0155546535; BS:80
INFO:SE:[Train]Epoch:165; Step:660; Time:17.55; Loss:0.016663488; BS:80
INFO:SE:[Train]Epoch:167; Step:670; Time:17.53; Loss:0.016354878; BS:80
INFO:SE:[Train]Epoch:170; Step:680; Time:17.54; Loss:0.01542517; BS:80
INFO:SE:[Train]Epoch:172; Step:690; Time:17.52; Loss:0.0149915265; BS:80
INFO:SE:[Train]Epoch:175; Step:700; Time:17.52; Loss:0.015022288; BS:80
INFO:SE:[Train]Epoch:177; Step:710; Time:17.46; Loss:0.014883174; BS:80
INFO:SE:[Train]Epoch:180; Step:720; Time:17.54; Loss:0.015060091; BS:80
INFO:SE:[Train]Epoch:182; Step:730; Time:17.50; Loss:0.014571731; BS:80
INFO:SE:[Train]Epoch:185; Step:740; Time:17.47; Loss:0.0152823385; BS:80
INFO:SE:[Train]Epoch:187; Step:750; Time:17.52; Loss:0.015554038; BS:80
INFO:SE:[Train]Epoch:190; Step:760; Time:17.47; Loss:0.015329418; BS:80
INFO:SE:[Train]Epoch:192; Step:770; Time:17.47; Loss:0.014331388; BS:80
INFO:SE:[Train]Epoch:195; Step:780; Time:17.54; Loss:0.015257339; BS:80
INFO:SE:[Train]Epoch:197; Step:790; Time:17.51; Loss:0.015345099; BS:80
INFO:SE:[Train]Epoch:200; Step:800; Time:17.52; Loss:0.01541388; BS:80
INFO:SE:[Train]Epoch:202; Step:810; Time:17.44; Loss:0.014723165; BS:80
INFO:SE:[Train]Epoch:205; Step:820; Time:17.51; Loss:0.015328294; BS:80
INFO:SE:[Train]Epoch:207; Step:830; Time:17.50; Loss:0.014509037; BS:80
INFO:SE:[Train]Epoch:210; Step:840; Time:17.45; Loss:0.014813828; BS:80
INFO:SE:[Train]Epoch:212; Step:850; Time:17.45; Loss:0.014491508; BS:80
INFO:SE:[Train]Epoch:215; Step:860; Time:17.49; Loss:0.01404414; BS:80
INFO:SE:[Train]Epoch:217; Step:870; Time:17.48; Loss:0.013589034; BS:80
INFO:SE:[Train]Epoch:220; Step:880; Time:17.51; Loss:0.013964726; BS:80
INFO:SE:[Train]Epoch:222; Step:890; Time:17.48; Loss:0.014039902; BS:80
INFO:SE:[Train]Epoch:225; Step:900; Time:17.55; Loss:0.014350375; BS:80
INFO:SE:[Train]Epoch:227; Step:910; Time:17.54; Loss:0.014459791; BS:80
INFO:SE:[Train]Epoch:230; Step:920; Time:17.45; Loss:0.0150918495; BS:80
INFO:SE:[Train]Epoch:232; Step:930; Time:17.54; Loss:0.013482913; BS:80
INFO:SE:[Train]Epoch:235; Step:940; Time:17.49; Loss:0.013617839; BS:80
INFO:SE:[Train]Epoch:237; Step:950; Time:17.48; Loss:0.013289454; BS:80
INFO:SE:[Train]Epoch:240; Step:960; Time:17.52; Loss:0.013496684; BS:80
INFO:SE:[Train]Epoch:242; Step:970; Time:17.45; Loss:0.013379887; BS:80
INFO:SE:[Train]Epoch:245; Step:980; Time:17.51; Loss:0.0136886; BS:80
INFO:SE:[Train]Epoch:247; Step:990; Time:17.51; Loss:0.013275653; BS:80
INFO:SE:[Train]Epoch:250; Step:1000; Time:17.46; Loss:0.013332354; BS:80
INFO:SE:[Train]Epoch:252; Step:1010; Time:17.50; Loss:0.013045055; BS:80
INFO:SE:[Train]Epoch:255; Step:1020; Time:17.51; Loss:0.0130124865; BS:80
INFO:SE:[Train]Epoch:257; Step:1030; Time:17.52; Loss:0.013202292; BS:80
INFO:SE:[Train]Epoch:260; Step:1040; Time:17.48; Loss:0.013414535; BS:80
INFO:SE:[Train]Epoch:262; Step:1050; Time:17.51; Loss:0.016309883; BS:80
INFO:SE:[Train]Epoch:265; Step:1060; Time:17.51; Loss:0.016980551; BS:80
INFO:SE:[Train]Epoch:267; Step:1070; Time:17.51; Loss:0.015135556; BS:80
INFO:SE:[Train]Epoch:270; Step:1080; Time:17.51; Loss:0.0141315805; BS:80
INFO:SE:[Train]Epoch:272; Step:1090; Time:17.46; Loss:0.012993407; BS:80
INFO:SE:[Train]Epoch:275; Step:1100; Time:17.52; Loss:0.013264301; BS:80
INFO:SE:[Train]Epoch:277; Step:1110; Time:17.48; Loss:0.012701692; BS:80
INFO:SE:[Train]Epoch:280; Step:1120; Time:17.54; Loss:0.012795562; BS:80
INFO:SE:[Train]Epoch:282; Step:1130; Time:17.51; Loss:0.012403744; BS:80
INFO:SE:[Train]Epoch:285; Step:1140; Time:17.53; Loss:0.012720066; BS:80
INFO:SE:[Train]Epoch:287; Step:1150; Time:17.48; Loss:0.01268529; BS:80
INFO:SE:[Train]Epoch:290; Step:1160; Time:17.48; Loss:0.012429679; BS:80
INFO:SE:[Train]Epoch:292; Step:1170; Time:17.50; Loss:0.012424027; BS:80
INFO:SE:[Train]Epoch:295; Step:1180; Time:17.57; Loss:0.012624031; BS:80
INFO:SE:[Train]Epoch:297; Step:1190; Time:17.45; Loss:0.012599079; BS:80
INFO:SE:[Train]Epoch:300; Step:1200; Time:17.48; Loss:0.012438495; BS:80
INFO:SE:[Train]Epoch:302; Step:1210; Time:17.50; Loss:0.013964002; BS:80
INFO:SE:[Train]Epoch:305; Step:1220; Time:17.49; Loss:0.013717959; BS:80
INFO:SE:[Train]Epoch:307; Step:1230; Time:17.48; Loss:0.013564807; BS:80
INFO:SE:[Train]Epoch:310; Step:1240; Time:17.91; Loss:0.012697957; BS:80
INFO:SE:[Train]Epoch:312; Step:1250; Time:17.51; Loss:0.012516442; BS:80
INFO:SE:[Train]Epoch:315; Step:1260; Time:17.46; Loss:0.01259663; BS:80
INFO:SE:[Train]Epoch:317; Step:1270; Time:17.53; Loss:0.012499989; BS:80
INFO:SE:[Train]Epoch:320; Step:1280; Time:17.46; Loss:0.012559721; BS:80
INFO:SE:[Train]Epoch:322; Step:1290; Time:17.47; Loss:0.012638134; BS:80
INFO:SE:[Train]Epoch:325; Step:1300; Time:17.49; Loss:0.012298505; BS:80
INFO:SE:[Train]Epoch:327; Step:1310; Time:17.52; Loss:0.0123742055; BS:80
INFO:SE:[Train]Epoch:330; Step:1320; Time:17.52; Loss:0.012021593; BS:80
INFO:SE:[Train]Epoch:332; Step:1330; Time:17.50; Loss:0.012293678; BS:80
INFO:SE:[Train]Epoch:335; Step:1340; Time:17.49; Loss:0.011829319; BS:80
INFO:SE:[Train]Epoch:337; Step:1350; Time:17.65; Loss:0.012059159; BS:80
INFO:SE:[Train]Epoch:340; Step:1360; Time:17.51; Loss:0.011965611; BS:80
INFO:SE:[Train]Epoch:342; Step:1370; Time:17.53; Loss:0.012173282; BS:80
INFO:SE:[Train]Epoch:345; Step:1380; Time:17.51; Loss:0.012121996; BS:80
INFO:SE:[Train]Epoch:347; Step:1390; Time:17.45; Loss:0.011820525; BS:80
INFO:SE:[Train]Epoch:350; Step:1400; Time:17.52; Loss:0.01187966; BS:80
INFO:SE:[Train]Epoch:352; Step:1410; Time:17.48; Loss:0.012055533; BS:80
INFO:SE:[Train]Epoch:355; Step:1420; Time:17.52; Loss:0.01233458; BS:80
INFO:SE:[Train]Epoch:357; Step:1430; Time:17.48; Loss:0.012781851; BS:80
INFO:SE:[Train]Epoch:360; Step:1440; Time:17.52; Loss:0.012551141; BS:80
INFO:SE:[Train]Epoch:362; Step:1450; Time:17.50; Loss:0.012048805; BS:80
INFO:SE:[Train]Epoch:365; Step:1460; Time:17.52; Loss:0.0125975385; BS:80
INFO:SE:[Train]Epoch:367; Step:1470; Time:17.49; Loss:0.0123454835; BS:80
INFO:SE:[Train]Epoch:370; Step:1480; Time:17.58; Loss:0.011785368; BS:80
INFO:SE:[Train]Epoch:372; Step:1490; Time:17.55; Loss:0.011759052; BS:80
INFO:SE:[Train]Epoch:375; Step:1500; Time:17.45; Loss:0.011728855; BS:80
INFO:SE:[Train]Epoch:377; Step:1510; Time:17.53; Loss:0.01169945; BS:80
INFO:SE:[Train]Epoch:380; Step:1520; Time:17.48; Loss:0.011556912; BS:80
INFO:SE:[Train]Epoch:382; Step:1530; Time:17.46; Loss:0.011644525; BS:80
INFO:SE:[Train]Epoch:385; Step:1540; Time:17.47; Loss:0.011704146; BS:80
INFO:SE:[Train]Epoch:387; Step:1550; Time:17.48; Loss:0.011901964; BS:80
INFO:SE:[Train]Epoch:390; Step:1560; Time:17.54; Loss:0.011606954; BS:80
INFO:SE:[Train]Epoch:392; Step:1570; Time:17.45; Loss:0.011697393; BS:80
INFO:SE:[Train]Epoch:395; Step:1580; Time:17.51; Loss:0.0115524195; BS:80
INFO:SE:[Train]Epoch:397; Step:1590; Time:17.51; Loss:0.011349354; BS:80
INFO:SE:[Train]Epoch:400; Step:1600; Time:17.51; Loss:0.011513646; BS:80
INFO:SE:[Train]Epoch:402; Step:1610; Time:17.55; Loss:0.011615563; BS:80
INFO:SE:[Train]Epoch:405; Step:1620; Time:17.49; Loss:0.011347195; BS:80
INFO:SE:[Train]Epoch:407; Step:1630; Time:17.46; Loss:0.0114221955; BS:80
INFO:SE:[Train]Epoch:410; Step:1640; Time:17.54; Loss:0.011301218; BS:80
INFO:SE:[Train]Epoch:412; Step:1650; Time:17.45; Loss:0.011422627; BS:80
INFO:SE:[Train]Epoch:415; Step:1660; Time:17.53; Loss:0.012605721; BS:80
INFO:SE:[Train]Epoch:417; Step:1670; Time:17.52; Loss:0.012200331; BS:80
INFO:SE:[Train]Epoch:420; Step:1680; Time:17.47; Loss:0.0122466935; BS:80
INFO:SE:[Train]Epoch:422; Step:1690; Time:17.49; Loss:0.0116491085; BS:80
INFO:SE:[Train]Epoch:425; Step:1700; Time:17.46; Loss:0.01162783; BS:80
INFO:SE:[Train]Epoch:427; Step:1710; Time:17.50; Loss:0.011596036; BS:80
INFO:SE:[Train]Epoch:430; Step:1720; Time:17.52; Loss:0.011329356; BS:80
INFO:SE:[Train]Epoch:432; Step:1730; Time:17.53; Loss:0.011590021; BS:80
INFO:SE:[Train]Epoch:435; Step:1740; Time:17.50; Loss:0.011300478; BS:80
INFO:SE:[Train]Epoch:437; Step:1750; Time:17.50; Loss:0.011371914; BS:80
INFO:SE:[Train]Epoch:440; Step:1760; Time:17.52; Loss:0.011213521; BS:80
INFO:SE:[Train]Epoch:442; Step:1770; Time:17.51; Loss:0.011043916; BS:80
INFO:SE:[Train]Epoch:445; Step:1780; Time:17.48; Loss:0.011010888; BS:80
INFO:SE:[Train]Epoch:447; Step:1790; Time:17.49; Loss:0.011314699; BS:80
INFO:SE:[Train]Epoch:450; Step:1800; Time:17.52; Loss:0.011313116; BS:80
INFO:SE:[Train]Epoch:452; Step:1810; Time:17.53; Loss:0.011966385; BS:80
INFO:SE:[Train]Epoch:455; Step:1820; Time:17.47; Loss:0.011590892; BS:80
INFO:SE:[Train]Epoch:457; Step:1830; Time:17.48; Loss:0.011381909; BS:80
INFO:SE:[Train]Epoch:460; Step:1840; Time:17.47; Loss:0.011212003; BS:80
INFO:SE:[Train]Epoch:462; Step:1850; Time:17.47; Loss:0.0110968985; BS:80
INFO:SE:[Train]Epoch:465; Step:1860; Time:17.51; Loss:0.010734288; BS:80
INFO:SE:[Train]Epoch:467; Step:1870; Time:17.49; Loss:0.010981202; BS:80
INFO:SE:[Train]Epoch:470; Step:1880; Time:17.53; Loss:0.010928334; BS:80
INFO:SE:[Train]Epoch:472; Step:1890; Time:17.52; Loss:0.010867276; BS:80
INFO:SE:[Train]Epoch:475; Step:1900; Time:17.46; Loss:0.011115072; BS:80
INFO:SE:[Train]Epoch:477; Step:1910; Time:17.49; Loss:0.011621127; BS:80
INFO:SE:[Train]Epoch:480; Step:1920; Time:17.47; Loss:0.011476926; BS:80
INFO:SE:[Train]Epoch:482; Step:1930; Time:17.51; Loss:0.01143964; BS:80
INFO:SE:[Train]Epoch:485; Step:1940; Time:17.48; Loss:0.011130947; BS:80
INFO:SE:[Train]Epoch:487; Step:1950; Time:17.76; Loss:0.011276549; BS:80
INFO:SE:[Train]Epoch:490; Step:1960; Time:17.54; Loss:0.011023201; BS:80
INFO:SE:[Train]Epoch:492; Step:1970; Time:17.52; Loss:0.011148253; BS:80
INFO:SE:[Train]Epoch:495; Step:1980; Time:17.50; Loss:0.011581518; BS:80
INFO:SE:[Train]Epoch:497; Step:1990; Time:17.54; Loss:0.010854982; BS:80
INFO:SE:[Train]Epoch:500; Step:2000; Time:17.54; Loss:0.010702508; BS:80
INFO:SE:[Train]Epoch:502; Step:2010; Time:17.52; Loss:0.010815261; BS:80
INFO:SE:[Train]Epoch:505; Step:2020; Time:17.50; Loss:0.010702746; BS:80
INFO:SE:[Train]Epoch:507; Step:2030; Time:17.48; Loss:0.010750692; BS:80
INFO:SE:[Train]Epoch:510; Step:2040; Time:17.46; Loss:0.010668133; BS:80
INFO:SE:[Train]Epoch:512; Step:2050; Time:17.54; Loss:0.011020043; BS:80
INFO:SE:[Train]Epoch:515; Step:2060; Time:17.52; Loss:0.011265377; BS:80
INFO:SE:[Train]Epoch:517; Step:2070; Time:17.46; Loss:0.010901623; BS:80
INFO:SE:[Train]Epoch:520; Step:2080; Time:17.54; Loss:0.010812187; BS:80
INFO:SE:[Train]Epoch:522; Step:2090; Time:17.50; Loss:0.0105321575; BS:80
INFO:SE:[Train]Epoch:525; Step:2100; Time:17.52; Loss:0.01039745; BS:80
INFO:SE:[Train]Epoch:527; Step:2110; Time:17.87; Loss:0.0103779035; BS:80
INFO:SE:[Train]Epoch:530; Step:2120; Time:17.54; Loss:0.010800092; BS:80
INFO:SE:[Train]Epoch:532; Step:2130; Time:17.48; Loss:0.010770573; BS:80
INFO:SE:[Train]Epoch:535; Step:2140; Time:17.45; Loss:0.010772884; BS:80
INFO:SE:[Train]Epoch:537; Step:2150; Time:17.47; Loss:0.010483691; BS:80
INFO:SE:[Train]Epoch:540; Step:2160; Time:17.50; Loss:0.010721305; BS:80
INFO:SE:[Train]Epoch:542; Step:2170; Time:17.49; Loss:0.011207731; BS:80
INFO:SE:[Train]Epoch:545; Step:2180; Time:17.48; Loss:0.011237379; BS:80
INFO:SE:[Train]Epoch:547; Step:2190; Time:17.51; Loss:0.010968471; BS:80
INFO:SE:[Train]Epoch:550; Step:2200; Time:17.51; Loss:0.010839572; BS:80
INFO:SE:[Train]Epoch:552; Step:2210; Time:17.53; Loss:0.010366941; BS:80
INFO:SE:[Train]Epoch:555; Step:2220; Time:17.48; Loss:0.010328672; BS:80
INFO:SE:[Train]Epoch:557; Step:2230; Time:17.54; Loss:0.010171355; BS:80
INFO:SE:[Train]Epoch:560; Step:2240; Time:17.45; Loss:0.010394951; BS:80
INFO:SE:[Train]Epoch:562; Step:2250; Time:17.51; Loss:0.010439853; BS:80
INFO:SE:[Train]Epoch:565; Step:2260; Time:17.49; Loss:0.010564161; BS:80
INFO:SE:[Train]Epoch:567; Step:2270; Time:17.53; Loss:0.010532488; BS:80
INFO:SE:[Train]Epoch:570; Step:2280; Time:17.48; Loss:0.010318954; BS:80
INFO:SE:[Train]Epoch:572; Step:2290; Time:17.49; Loss:0.0105310315; BS:80
INFO:SE:[Train]Epoch:575; Step:2300; Time:17.51; Loss:0.010356684; BS:80
INFO:SE:[Train]Epoch:577; Step:2310; Time:17.51; Loss:0.0107947; BS:80
INFO:SE:[Train]Epoch:580; Step:2320; Time:17.52; Loss:0.010678305; BS:80
INFO:SE:[Train]Epoch:582; Step:2330; Time:17.57; Loss:0.010417389; BS:80
INFO:SE:[Train]Epoch:585; Step:2340; Time:17.49; Loss:0.01040584; BS:80
INFO:SE:[Train]Epoch:587; Step:2350; Time:17.48; Loss:0.010609997; BS:80
INFO:SE:[Train]Epoch:590; Step:2360; Time:17.51; Loss:0.01039726; BS:80
INFO:SE:[Train]Epoch:592; Step:2370; Time:17.52; Loss:0.0102546; BS:80
INFO:SE:[Train]Epoch:595; Step:2380; Time:17.52; Loss:0.010429825; BS:80
INFO:SE:[Train]Epoch:597; Step:2390; Time:17.52; Loss:0.010326436; BS:80
INFO:SE:[Train]Epoch:600; Step:2400; Time:17.48; Loss:0.010341385; BS:80
INFO:SE:[Train]Epoch:602; Step:2410; Time:17.49; Loss:0.010218488; BS:80
INFO:SE:[Train]Epoch:605; Step:2420; Time:17.50; Loss:0.010367792; BS:80
INFO:SE:[Train]Epoch:607; Step:2430; Time:17.47; Loss:0.010444999; BS:80
INFO:SE:[Train]Epoch:610; Step:2440; Time:17.47; Loss:0.010594073; BS:80
INFO:SE:[Train]Epoch:612; Step:2450; Time:17.50; Loss:0.010798413; BS:80
INFO:SE:[Train]Epoch:615; Step:2460; Time:17.48; Loss:0.011292914; BS:80
INFO:SE:[Train]Epoch:617; Step:2470; Time:17.53; Loss:0.010859273; BS:80
INFO:SE:[Train]Epoch:620; Step:2480; Time:17.50; Loss:0.010486515; BS:80
INFO:SE:[Train]Epoch:622; Step:2490; Time:17.50; Loss:0.010456046; BS:80
INFO:SE:[Train]Epoch:625; Step:2500; Time:17.48; Loss:0.009943416; BS:80
INFO:SE:[Train]Epoch:627; Step:2510; Time:17.51; Loss:0.009920677; BS:80
INFO:SE:[Train]Epoch:630; Step:2520; Time:17.50; Loss:0.010058391; BS:80
INFO:SE:[Train]Epoch:632; Step:2530; Time:17.46; Loss:0.010160805; BS:80
INFO:SE:[Train]Epoch:635; Step:2540; Time:17.45; Loss:0.010740148; BS:80
INFO:SE:[Train]Epoch:637; Step:2550; Time:17.45; Loss:0.010472785; BS:80
INFO:SE:[Train]Epoch:640; Step:2560; Time:17.54; Loss:0.010726668; BS:80
INFO:SE:[Train]Epoch:642; Step:2570; Time:17.49; Loss:0.0109014865; BS:80
INFO:SE:[Train]Epoch:645; Step:2580; Time:17.56; Loss:0.010090359; BS:80
INFO:SE:[Train]Epoch:647; Step:2590; Time:17.52; Loss:0.009878606; BS:80
INFO:SE:[Train]Epoch:650; Step:2600; Time:17.51; Loss:0.010085413; BS:80
INFO:SE:[Train]Epoch:652; Step:2610; Time:17.52; Loss:0.009747163; BS:80
INFO:SE:[Train]Epoch:655; Step:2620; Time:17.49; Loss:0.009897781; BS:80
INFO:SE:[Train]Epoch:657; Step:2630; Time:17.47; Loss:0.009733744; BS:80
INFO:SE:[Train]Epoch:660; Step:2640; Time:17.51; Loss:0.009734957; BS:80
INFO:SE:[Train]Epoch:662; Step:2650; Time:17.54; Loss:0.009786403; BS:80
INFO:SE:[Train]Epoch:665; Step:2660; Time:17.47; Loss:0.010118307; BS:80
INFO:SE:[Train]Epoch:667; Step:2670; Time:17.52; Loss:0.009758382; BS:80
INFO:SE:[Train]Epoch:670; Step:2680; Time:17.48; Loss:0.009930532; BS:80
INFO:SE:[Train]Epoch:672; Step:2690; Time:17.50; Loss:0.0104938755; BS:80
INFO:SE:[Train]Epoch:675; Step:2700; Time:17.51; Loss:0.010646502; BS:80
INFO:SE:[Train]Epoch:677; Step:2710; Time:17.46; Loss:0.012243713; BS:80
INFO:SE:[Train]Epoch:680; Step:2720; Time:17.52; Loss:0.011073984; BS:80
INFO:SE:[Train]Epoch:682; Step:2730; Time:17.52; Loss:0.010592936; BS:80
INFO:SE:[Train]Epoch:685; Step:2740; Time:17.52; Loss:0.010236283; BS:80
INFO:SE:[Train]Epoch:687; Step:2750; Time:17.51; Loss:0.010061579; BS:80
INFO:SE:[Train]Epoch:690; Step:2760; Time:17.53; Loss:0.009876123; BS:80
INFO:SE:[Train]Epoch:692; Step:2770; Time:17.51; Loss:0.009679129; BS:80
INFO:SE:[Train]Epoch:695; Step:2780; Time:17.53; Loss:0.009952571; BS:80
INFO:SE:[Train]Epoch:697; Step:2790; Time:17.56; Loss:0.009521127; BS:80
INFO:SE:[Train]Epoch:700; Step:2800; Time:17.45; Loss:0.009533418; BS:80
INFO:SE:[Train]Epoch:702; Step:2810; Time:17.51; Loss:0.009754224; BS:80
INFO:SE:[Train]Epoch:705; Step:2820; Time:17.52; Loss:0.009538943; BS:80
INFO:SE:[Train]Epoch:707; Step:2830; Time:17.49; Loss:0.00979189; BS:80
INFO:SE:[Train]Epoch:710; Step:2840; Time:17.48; Loss:0.00958899; BS:80
INFO:SE:[Train]Epoch:712; Step:2850; Time:17.46; Loss:0.009873504; BS:80
INFO:SE:[Train]Epoch:715; Step:2860; Time:17.55; Loss:0.009645544; BS:80
INFO:SE:[Train]Epoch:717; Step:2870; Time:17.51; Loss:0.009793306; BS:80
INFO:SE:[Train]Epoch:720; Step:2880; Time:17.49; Loss:0.009663049; BS:80
INFO:SE:[Train]Epoch:722; Step:2890; Time:17.58; Loss:0.009891489; BS:80
INFO:SE:[Train]Epoch:725; Step:2900; Time:17.51; Loss:0.010307737; BS:80
INFO:SE:[Train]Epoch:727; Step:2910; Time:17.51; Loss:0.009967857; BS:80
INFO:SE:[Train]Epoch:730; Step:2920; Time:17.48; Loss:0.009526508; BS:80
INFO:SE:[Train]Epoch:732; Step:2930; Time:17.53; Loss:0.009791932; BS:80
INFO:SE:[Train]Epoch:735; Step:2940; Time:17.46; Loss:0.00995872; BS:80
INFO:SE:[Train]Epoch:737; Step:2950; Time:17.46; Loss:0.010086432; BS:80
INFO:SE:[Train]Epoch:740; Step:2960; Time:17.52; Loss:0.009897488; BS:80
INFO:SE:[Train]Epoch:742; Step:2970; Time:17.44; Loss:0.009759139; BS:80
INFO:SE:[Train]Epoch:745; Step:2980; Time:17.53; Loss:0.009696635; BS:80
INFO:SE:[Train]Epoch:747; Step:2990; Time:17.45; Loss:0.010022259; BS:80
INFO:SE:[Train]Epoch:750; Step:3000; Time:17.48; Loss:0.009779131; BS:80
INFO:SE:[Train]Epoch:752; Step:3010; Time:17.53; Loss:0.009568993; BS:80
INFO:SE:[Train]Epoch:755; Step:3020; Time:17.51; Loss:0.00950279; BS:80
INFO:SE:[Train]Epoch:757; Step:3030; Time:17.51; Loss:0.009652394; BS:80
INFO:SE:[Train]Epoch:760; Step:3040; Time:17.51; Loss:0.009458652; BS:80
INFO:SE:[Train]Epoch:762; Step:3050; Time:17.46; Loss:0.00961125; BS:80
INFO:SE:[Train]Epoch:765; Step:3060; Time:17.48; Loss:0.009583585; BS:80
INFO:SE:[Train]Epoch:767; Step:3070; Time:17.48; Loss:0.009355515; BS:80
INFO:SE:[Train]Epoch:770; Step:3080; Time:17.48; Loss:0.009775175; BS:80
INFO:SE:[Train]Epoch:772; Step:3090; Time:17.51; Loss:0.009727194; BS:80
INFO:SE:[Train]Epoch:775; Step:3100; Time:17.50; Loss:0.009779966; BS:80
INFO:SE:[Train]Epoch:777; Step:3110; Time:17.48; Loss:0.010417226; BS:80
INFO:SE:[Train]Epoch:780; Step:3120; Time:17.44; Loss:0.010299013; BS:80
INFO:SE:[Train]Epoch:782; Step:3130; Time:17.52; Loss:0.009962769; BS:80
INFO:SE:[Train]Epoch:785; Step:3140; Time:17.55; Loss:0.009814847; BS:80
INFO:SE:[Train]Epoch:787; Step:3150; Time:17.54; Loss:0.010010878; BS:80
INFO:SE:[Train]Epoch:790; Step:3160; Time:17.49; Loss:0.009923549; BS:80
INFO:SE:[Train]Epoch:792; Step:3170; Time:17.50; Loss:0.009736251; BS:80
INFO:SE:[Train]Epoch:795; Step:3180; Time:17.46; Loss:0.010015181; BS:80
INFO:SE:[Train]Epoch:797; Step:3190; Time:17.51; Loss:0.009608074; BS:80
